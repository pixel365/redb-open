name: Test

# Phase 1: Single Maintainer Governance
# This workflow provides basic testing functionality.
# See CONTRIBUTING.md for governance evolution plan.

on:
  push:
    branches: [ main, develop, release/*, hotfix/* ]
  pull_request:
    branches: [ main, develop, release/*, hotfix/* ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
      
      - name: Install dependencies
        run: |
          go mod download
          go mod verify
      
      - name: Run tests
        run: |
          # Run tests with verbose output for each workspace module
          for module in cmd/cli cmd/supervisor pkg services/anchor services/clientapi services/core services/mcpserver services/mesh services/queryapi services/security services/serviceapi services/transformation services/unifiedmodel services/webhook; do
            if [ -d "$module" ]; then
              echo "Testing $module..."
              cd "$module"
              go test -v ./...
              cd - > /dev/null
            fi
          done
      
      - name: Run tests with coverage
        run: |
          # Run tests with coverage reporting for each workspace module
          for module in cmd/cli cmd/supervisor pkg services/anchor services/clientapi services/core services/mcpserver services/mesh services/queryapi services/security services/serviceapi services/transformation services/unifiedmodel services/webhook; do
            if [ -d "$module" ]; then
              echo "Testing $module with coverage..."
              cd "$module"
              go test -cover ./...
              cd - > /dev/null
            fi
          done
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: always()
        with:
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false 
name: Build and Test

# Phase 1: Single Maintainer Governance
# This workflow provides basic build and test functionality.
# See CONTRIBUTING.md for governance evolution plan.

on:
  push:
    branches: [ main, develop, release/*, hotfix/* ]
  pull_request:
    branches: [ main, develop, release/*, hotfix/* ]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
      
      - name: Install dependencies
        run: |
          go mod download
          go mod verify
      
      - name: Build
        run: |
          # Build each workspace module
          for module in cmd/cli cmd/supervisor pkg services/anchor services/clientapi services/core services/mcpserver services/mesh services/queryapi services/security services/serviceapi services/transformation services/unifiedmodel services/webhook; do
            if [ -d "$module" ]; then
              echo "Building $module..."
              cd "$module"
              go build ./...
              cd - > /dev/null
            fi
          done
      
      - name: Test
        run: |
          # Run tests for each workspace module
          for module in cmd/cli cmd/supervisor pkg services/anchor services/clientapi services/core services/mcpserver services/mesh services/queryapi services/security services/serviceapi services/transformation services/unifiedmodel services/webhook; do
            if [ -d "$module" ]; then
              echo "Testing $module..."
              cd "$module"
              go test -v ./...
              cd - > /dev/null
            fi
          done
      
      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.64.8
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      
      - name: Lint
        run: |
          # Run linting for each workspace module
          for module in cmd/cli cmd/supervisor pkg services/anchor services/clientapi services/core services/mcpserver services/mesh services/queryapi services/security services/serviceapi services/transformation services/unifiedmodel services/webhook; do
            if [ -d "$module" ]; then
              echo "Linting $module..."
              cd "$module"
              golangci-lint run --timeout=5m --allow-parallel-runners
              cd - > /dev/null
            fi
          done 